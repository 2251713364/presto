Basic steps to install:

1.  Install FFTW.  You need to compile FFTW for _single_
  precision (see the config flags I recommend below). FFTW is
  not actually _required_ but since FFTW is so damn fast you
  will suffer a 50% or more performance hit if you don't. This
  is pretty much true even if you have access to a vendor
  specific optimized library (in this case the performance will
  more than likely be similar).  

  For all architectures I recommend the following configuration:
  ./configure --enable-shared --with-gcc --enable-float \ 
	    --enable-type-prefix --prefix=/usr/local

  For i386 architectures also add:
  --enable-i386-hacks
  
  For Athlon machines, I would recommend using FFTW-GEL instead
  which gives an additional 50% or so speedup.

  FFTW:     http://www.fftw.org
  FFTW-GEL: http://www.complang.tuwien.ac.at/skral/fftwgel.html

2.  Install PGPLOT.  http://www.astro.caltech.edu/~tjp/pgplot/
  You need the X-windows and postscript drivers at a minimum

3.  Install TEMPO.  Make sure to set the TEMPO environment variable.
  http://pulsar.princeton.edu/tempo/index.html

4.  Install GLIB.
  ftp://ftp.gnome.org/pub/GNOME/stable/sources/glib/ On Linux
  machines this is almost certainly already on your system
  (check in /usr/lib and /usr/include/glib*).  Although you may
  need to install a glib development package in order to have
  the required include files...

5.  Set a PRESTO environment variable to this directory (the top level
  directory in the Preto distribution).

6.  cd to $PRESTO/src.  Check and modify the Makefile for your
  machine of choice.  Insure that the library and include file
  directories are correct for FFTW, PGPLOT, GLIB, and TEMPO.

7.  Get some memory and cache information ready for your
  machine.  For example, how much total memory do you want an
  in-core FFT to use before it switches to out-of-core?  This
  information is not important, so don't worry about it.

8.  Do a 'make prep' which will ask you for some memory info
  and then turn the pulsar database into its binary form.

9.  If you are using FFTW, do a 'make makewisdom'.  This gets
  FFTW acquainted with your system.  It is best if you are the
  only user on the machine when you run this, as it is very
  computation intensive and may take a while.

10.  Do a 'make'.  This will make all of the executables.

11.  Do a 'make links'.  This will make links in $PRESTO/bin to
  all the executables that are in $PRESTO/src.

12.  The required libraries and miscellaneous files will be
  located in presto/lib.  You may copy or move the executables
  wherever you like, but the library files should stay put.
  (That's why you define the PRESTO variable -- so the routines
  can find them).

13.  If you want to save some disk space, do a 'make clean' in
  the 'src' directory.  This will leave the libraries and
  binaries in their respective directories but will get rid of
  all the extra stuff in the 'src' directory.

14.  Go find pulsars.


Platform specific information:

DEC ALPHA --------- 
1.  In order to link the routines which use
  the pgplot libraries, you may need to chance the Makefile so
  that instead of linking with f77, you link with cc and the
  $(CFLAGS) variable.


Scott Ransom
